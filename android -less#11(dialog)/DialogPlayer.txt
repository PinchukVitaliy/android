////////////MainActivity Java/////////


import android.annotation.SuppressLint;
import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.media.MediaPlayer;
import android.os.Bundle;
import android.os.Handler;
import android.support.v7.app.AppCompatActivity;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.SeekBar;
import android.widget.TextView;
import android.widget.Toast;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Locale;

public class DialogMediaPlayerActivity extends AppCompatActivity {

    private Button buttonPlayStop;
    private TextView songName;
    private TextView albumName;
    private MediaPlayer mediaPlayer;
    private SeekBar seekBar;
    final Context context = this;
    private Button button;
    int i = 0;

    private final Handler handler = new Handler();

    @SuppressLint({"ClickableViewAccessibility", "SetTextI18n"})
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_dialog_media_player);

        button = (Button) findViewById(R.id.buttonPrompt);
        getSupportActionBar().setTitle("activity_dialog_media_player");


        initViews();

        button.setOnClickListener(new OnClickListener() {

            @Override
            public void onClick(View arg0) {
                LayoutInflater li = LayoutInflater.from(context);
                View promptsView = li.inflate(R.layout.my_item_player, null);

                AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(
                        context);
                alertDialogBuilder.setView(promptsView);

                Button playStopButton = (Button) promptsView.findViewById(R.id.playStop);
                Button previousButton = (Button) promptsView.findViewById(R.id.btnPrevious);
                Button nextButton = (Button) promptsView.findViewById(R.id.btnNext);
                nextButton.setOnClickListener(new OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        Toast.makeText(context, "Next", Toast.LENGTH_SHORT).show();
                    }
                });
                previousButton.setOnClickListener(new OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        Toast.makeText(context, "Previous", Toast.LENGTH_SHORT).show();
                    }
                });
                playStopButton.setOnClickListener(new OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        Toast.makeText(context, "PlayStop", Toast.LENGTH_SHORT).show();
                    }
                });
                alertDialogBuilder
                        .setCancelable(false)
                        .setPositiveButton("OK",
                                new DialogInterface.OnClickListener() {
                                    public void onClick(DialogInterface dialog, int id) {

                                    }
                                })
                        .setNegativeButton("Cancel",
                                new DialogInterface.OnClickListener() {
                                    public void onClick(DialogInterface dialog, int id) {
                                        dialog.cancel();
                                    }
                                });
                // create alert dialog
                AlertDialog alertDialog = alertDialogBuilder.create();
                // show it
                alertDialog.show();

            }
        });
    }

    @SuppressLint("ClickableViewAccessibility")
    private void initViews() {
        songName = (TextView) findViewById(R.id.textSongName);
        albumName = (TextView) findViewById(R.id.textAlbumName);

        buttonPlayStop = (Button) findViewById(R.id.ButtonPlayStop);
        mediaPlayer = MediaPlayer.create(context, R.raw.calvin_harris_my_way);

        seekBar = (SeekBar) findViewById(R.id.seekBar);
        seekBar.setMax(mediaPlayer.getDuration());
        seekBar.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                seekChange(v);
                return false;
            }
        });

        albumName.setText(allTime() + " - " + convertTime());
        i = mediaPlayer.getCurrentPosition();
    }

    private void seekChange(View v) {
        if (mediaPlayer.isPlaying()) {
            SeekBar sb = (SeekBar) v;
            mediaPlayer.seekTo(sb.getProgress());
        }
    }

    public void playAndStop(View v) {
        if (buttonPlayStop.getText() == getString(R.string.play_str)) {
            buttonPlayStop.setText(getString(R.string.pause_str));
            buttonPlayStop.setBackgroundResource(R.drawable.ic_pause_circle_filled_black_24dp);
            try {
                mediaPlayer.start();
                startPlayProgressUpdater();
            } catch (IllegalStateException e) {
                mediaPlayer.pause();
            }
        } else {
            buttonPlayStop.setText(getString(R.string.play_str));
            buttonPlayStop.setBackgroundResource(R.drawable.ic_play_circle_filled_black_24dp);
            mediaPlayer.pause();
        }
    }

    public void startPlayProgressUpdater() {
        seekBar.setProgress(mediaPlayer.getCurrentPosition());
        albumName.setText(allTime() + " - " + convertTime());
        if (mediaPlayer.isPlaying()) {
            Runnable notification = new Runnable() {
                public void run() {
                    startPlayProgressUpdater();
                }
            };
            handler.postDelayed(notification, 1000);
        } else {
            mediaPlayer.pause();
            buttonPlayStop.setText(getString(R.string.play_str));
            buttonPlayStop.setBackgroundResource(R.drawable.ic_play_circle_filled_black_24dp);
            albumName.setText(allTime() + " - " + convertTime());
            seekBar.setProgress(mediaPlayer.getCurrentPosition());
        }
    }


    private String allTime() {
        Calendar calendar = Calendar.getInstance();
        calendar.setTimeInMillis(mediaPlayer.getDuration());
        return new SimpleDateFormat("mm:ss", Locale.UK).format(calendar.getTime());
    }

    private String convertTime() {
        Calendar calendar = Calendar.getInstance();
        calendar.setTimeInMillis(mediaPlayer.getCurrentPosition());
        return new SimpleDateFormat("mm:ss", Locale.UK).format(calendar.getTime());
    }

    public void next(View view) {
        if (mediaPlayer.isPlaying()) {
            mediaPlayer.seekTo(mediaPlayer.getCurrentPosition()+15000);
        }
    }

    public void previous(View view) {
        if (mediaPlayer.isPlaying()) {
            mediaPlayer.seekTo(mediaPlayer.getCurrentPosition()-15000);
        }
    }
}

/////////////////mainActivity xml ///////////////
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <LinearLayout
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:background="@color/mycolor"
        android:gravity="center"
        android:orientation="vertical">

        <LinearLayout
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingLeft="5dp"
            android:paddingRight="5dp">

            <ImageView
                android:id="@+id/imageViewAlbumArt"
                android:layout_width="70dp"
                android:layout_height="70dp"
                android:src="@drawable/ic_cd" />

            <LinearLayout
                android:layout_width="fill_parent"
                android:layout_height="fill_parent"
                android:layout_weight="1"
                android:gravity="center"
                android:orientation="vertical"
                android:padding="5dp">

                <TextView
                    android:id="@+id/textSongName"

                    android:layout_width="fill_parent"
                    android:layout_height="wrap_content"
                    android:ellipsize="marquee"
                    android:focusable="true"
                    android:focusableInTouchMode="true"
                    android:freezesText="true"
                    android:gravity="center"

                    android:marqueeRepeatLimit="marquee_forever"
                    android:scrollHorizontally="true"
                    android:singleLine="true"
                    android:textColor="@color/white"
                    android:textSize="18dp"
                    android:textStyle="bold" />

                <TextView
                    android:id="@+id/textAlbumName"
                    android:layout_width="fill_parent"
                    android:layout_height="wrap_content"
                    android:textColor="@android:color/black"
                    android:textSize="13dp"/>
            </LinearLayout>

            <LinearLayout
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:gravity="center"
                android:orientation="horizontal">

                <Button
                    android:id="@+id/btnPrevious"
                    android:layout_width="32dp"
                    android:layout_height="32dp"
                    android:layout_margin="5dp"
                    android:background="@drawable/ic_fast_rewind_black_24dp"
                    android:onClick="previous"/>


                <Button
                    android:id="@+id/ButtonPlayStop"
                    android:text="@string/play_str"
                    android:textSize="0dp"
                    android:layout_width="32dp"
                    android:layout_height="32dp"
                    android:layout_margin="5dp"
                    android:background="@drawable/ic_play_circle_filled_black_24dp"
                    android:onClick="playAndStop"/>


                <Button
                    android:id="@+id/btnNext"
                    android:layout_width="32dp"
                    android:layout_height="32dp"
                    android:layout_marginLeft="5dp"
                    android:background="@drawable/ic_fast_forward_black_24dp"
                    android:onClick="next"/>
            </LinearLayout>

        </LinearLayout>

        <SeekBar
            android:id="@+id/seekBar"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:paddingTop="10dp" />
</LinearLayout>

    <Button
        android:id="@+id/buttonPrompt"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="15dp"
        android:text="Show Prompt Dialog" />

</LinearLayout>


////////////////////dialog layout custom xml //////////////
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <LinearLayout
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:background="@color/mycolor"
        android:gravity="center"
        android:orientation="vertical">

        <LinearLayout
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingLeft="5dp"
            android:paddingRight="5dp">

            <ImageView
                android:id="@+id/imageViewAlbumArt"
                android:layout_width="70dp"
                android:layout_height="70dp"
                android:src="@drawable/ic_cd" />

            <LinearLayout
                android:layout_width="fill_parent"
                android:layout_height="fill_parent"
                android:layout_weight="1"
                android:gravity="center"
                android:orientation="vertical"
                android:padding="5dp">

                <TextView
                    android:id="@+id/textSongName"

                    android:layout_width="fill_parent"
                    android:layout_height="wrap_content"
                    android:ellipsize="marquee"
                    android:focusable="true"
                    android:focusableInTouchMode="true"
                    android:freezesText="true"
                    android:gravity="center"

                    android:marqueeRepeatLimit="marquee_forever"
                    android:scrollHorizontally="true"
                    android:singleLine="true"
                    android:textColor="@color/white"
                    android:textSize="18dp"
                    android:textStyle="bold" />

                <TextView
                    android:id="@+id/textAlbumName"
                    android:layout_width="fill_parent"
                    android:layout_height="wrap_content"
                    android:textColor="@android:color/black"
                    android:textSize="13dp"/>
            </LinearLayout>

            <LinearLayout
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:gravity="center"
                android:orientation="horizontal">

                <Button
                    android:id="@+id/btnPrevious"
                    android:layout_width="32dp"
                    android:layout_height="32dp"
                    android:layout_margin="5dp"
                    android:background="@drawable/ic_fast_rewind_black_24dp" />


                <Button
                    android:id="@+id/playStop"
                    android:text="@string/play_str"
                    android:textSize="0dp"
                    android:layout_width="32dp"
                    android:layout_height="32dp"
                    android:layout_margin="5dp"
                    android:background="@drawable/ic_play_circle_filled_black_24dp"
                    />


                <Button
                    android:id="@+id/btnNext"
                    android:layout_width="32dp"
                    android:layout_height="32dp"
                    android:layout_marginLeft="5dp"
                    android:background="@drawable/ic_fast_forward_black_24dp" />
            </LinearLayout>

        </LinearLayout>

        <SeekBar
            android:id="@+id/seekBar"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:paddingTop="10dp" />
    </LinearLayout>
</LinearLayout>


///////////// vulues string xml ////////////
<resources>
    <string name="app_name">NotificationPlayer</string>
    <string name="play_str">PLAY</string>
    <string name="pause_str">PAUSE</string>
</resources>